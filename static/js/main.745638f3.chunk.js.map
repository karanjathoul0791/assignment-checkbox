{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["userData","name","App","useState","users","setUsers","useEffect","handleChange","e","target","checked","tempUser","map","user","isChecked","type","onChange","filter","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAAe,I,YCGTA,EAAW,CAAC,CAAEC,KAAM,WAAa,CAAEA,KAAM,YAAc,CAAEA,KAAM,UAAY,CAAEA,KAAM,UAiD1EC,MAhDf,WACG,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACAC,qBAAU,WACPD,EAASL,KACT,IACH,IAAMO,EAAe,SAACC,GACnB,MAA0BA,EAAEC,OAApBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,QACd,GAAa,cAATT,EAAsB,CACvB,IAAIU,EAAWP,EAAMQ,KAAI,SAACC,GACvB,OAAO,2BAAKA,GAAZ,IAAkBC,UAAWJ,OAEhCL,EAASM,OACL,CACJ,IAAIA,EAAWP,EAAMQ,KAAI,SAACC,GAAD,OACtBA,EAAKZ,OAASA,EAAd,2BAA0BY,GAA1B,IAAgCC,UAAWJ,IAAYG,KAE1DR,EAASM,KAGf,OACG,8BACG,iCACG,6CACA,gCACG,uBACGI,KAAK,WACLd,KAAK,YACLe,SAAUT,EACVG,QAASN,EAAMa,QAAO,SAACJ,GAAD,OAA8B,KAAhB,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMC,cAAoBI,OAAS,IAEtE,kDAEFd,EAAMQ,KAAI,SAACC,GAAD,OACR,gCACG,uBACGE,KAAK,WACLd,KAAMY,EAAKZ,KACXe,SAAUT,EACVG,SAAa,OAAJG,QAAI,IAAJA,OAAA,EAAAA,EAAMC,aAAa,IAE/B,gCAAQD,EAAKZ,mBChChBkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.745638f3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg'\nimport './App.css'\nimport React, { useState, useEffect } from 'react'\nconst userData = [{ name: 'Chennai' }, { name: 'Banglore' }, { name: 'Mumbai' }, { name: 'Delhi' }]\nfunction App() {\n   const [users, setUsers] = useState([])\n   useEffect(() => {\n      setUsers(userData)\n   }, [])\n   const handleChange = (e) => {\n      const { name, checked } = e.target\n      if (name === 'allSelect') {\n         let tempUser = users.map((user) => {\n            return { ...user, isChecked: checked }\n         })\n         setUsers(tempUser)\n      } else {\n         let tempUser = users.map((user) =>\n            user.name === name ? { ...user, isChecked: checked } : user\n         )\n         setUsers(tempUser)\n      }\n   }\n   return (\n      <div>\n         <form>\n            <h3>Select User</h3>\n            <div>\n               <input\n                  type='checkbox'\n                  name='allSelect'\n                  onChange={handleChange}\n                  checked={users.filter((user) => user?.isChecked !== true).length < 1}\n               />\n               <label>All Select</label>\n            </div>\n            {users.map((user) => (\n               <div>\n                  <input\n                     type='checkbox'\n                     name={user.name}\n                     onChange={handleChange}\n                     checked={user?.isChecked || false}\n                  />\n                  <label>{user.name}</label>\n               </div>\n            ))}\n         </form>\n      </div>\n   )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}